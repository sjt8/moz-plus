# Generated by Django 4.2.6 on 2023-10-08 17:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('subscriber', '0001_initial'),
        ('content_creator', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BestCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WatchlistSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.season')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriber.subscriber')),
            ],
        ),
        migrations.CreateModel(
            name='WatchlistMoviesPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_part', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.moviepart')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriber.subscriber')),
            ],
        ),
        migrations.CreateModel(
            name='ShowRatingMoviePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1.0), (2, 1.5), (3, 2.0), (4, 2.5), (5, 3.0), (6, 3.5), (7, 4.0), (8, 4.5), (9, 5.0)], default=1)),
                ('movie_part', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.moviepart')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriber.subscriber')),
            ],
        ),
        migrations.CreateModel(
            name='ShowRatingEpisodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1.0), (2, 1.5), (3, 2.0), (4, 2.5), (5, 3.0), (6, 3.5), (7, 4.0), (8, 4.5), (9, 5.0)], default=1)),
                ('episodes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.episodes')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriber.subscriber')),
            ],
        ),
        migrations.CreateModel(
            name='ShowCollectionSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('best_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content_management.bestcollection')),
                ('series', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.series')),
            ],
        ),
        migrations.CreateModel(
            name='ShowCollectionMovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('best_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content_management.bestcollection')),
                ('movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.movie')),
            ],
        ),
        migrations.CreateModel(
            name='FavouriteSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.series')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriber.subscriber')),
            ],
        ),
        migrations.CreateModel(
            name='FavouriteMovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_part', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.moviepart')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriber.subscriber')),
            ],
        ),
        migrations.CreateModel(
            name='ContinueWatchingMoviePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watch_duration', models.DurationField()),
                ('movie_part', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.moviepart')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriber.subscriber')),
            ],
        ),
        migrations.CreateModel(
            name='ContinueWatchingEpisodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watch_duration', models.DurationField()),
                ('episodes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content_creator.episodes')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriber.subscriber')),
            ],
        ),
    ]
